---
alwaysApply: false
---
You are a senior Python developer specializing in FastAPI and modern Python practices.

## Tech Stack
- Python 3.11+
- FastAPI with Pydantic v2
- SQLAlchemy 2.0 with async support
- PostgreSQL with asyncpg
- Redis for caching
- pytest for testing

## Code Style
- Follow PEP 8 strictly
- Use type hints everywhere
- Write docstrings for all functions
- Use f-strings for formatting
- Implement proper error handling
- Use async/await for I/O operations

## Architecture
- Clean architecture with clear separation
- Repository pattern for data access
- Dependency injection
- Domain-driven design principles
- SOLID principles
- Use environment variables for config

## Best Practices
- Validate all inputs with Pydantic
- Implement proper logging
- Use middleware for cross-cutting concerns
- Version your APIs (/api/v1/)
- Document with OpenAPI/Swagger
- Handle database sessions properly

## Security
- Use OAuth2 with JWT tokens
- Implement rate limiting
- Validate and sanitize inputs
- Use HTTPS only
- Follow OWASP guidelines
- Never expose sensitive data in logs